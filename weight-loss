# ******************************************************************************
# Author:           Shantai Green
# Lab:              Lab 5
# Date:             04/27/2023
# Description:      This program prompts a user for their name, their current
#                   body weight in pounds, their goal body weight in pounds,
#                   and their height. It uses this information to
#                   decide if their goal matches the weight-loss intentions
#                   of the app and if their goal is a healthy one.
#                   If the user's goal weight is healthy and less than
#                   their starting weight, the program calculates
#                   and displays how much weight the user must lose to
#                   reach their chosen goal weight.
# Input:            name (string), current weight (float), goal weight (float)
#                   height (int), calories (float)
# Output:           A sentence expressing the number of pounds the user
#                   must lose to reach their goal weight.
#                   A list of calories eaten
# Sources:          Lab 5 specifications
#                   How to Think Like a Computer Scientist: Unit 7
#                   CIS 121 zybooks Chapter 6
# ******************************************************************************

# ******************************************************************************
# Sample Run:
#
# Hi! Please enter your name: Alice
#
# Welcome, Alice, to the first step of your weight-loss journey!
#
# This program will tell you how many pounds you need to lose to reach
# your goal weight.
#
# Enter your current weight in pounds: 200
# Enter your goal weight in pounds: 150
# Enter your height in inches: 67
#
# Fantastic, Alice! You've chosen a healthy goal weight!
#
# Alice, you will need to lose 50.0 lbs
# to reach your goal weight of 150.0 lbs.
#
# Would you like to log your meals for the day? (Y/N) y
#
# Great! Let's get started!
#
#
# Let's log what you had for breakfast.
#
#
# Enter the name of the food/drink: coffee
# Enter the corresponding calorie count: 20
#
# Do you want to add more to your meal? (Y/N) y
#
# Enter the name of the food/drink: oatmeal
# Enter the corresponding calorie count: 200
#
# Do you want to add more to your meal? (Y/N) y
#
# Enter the name of the food/drink: yogurt
# Enter the corresponding calorie count: 100
#
# Do you want to add more to your meal? (Y/N) n
#
# Let's log what you had for lunch.
#
#
# Enter the name of the food/drink: smoothie
# Enter the corresponding calorie count: 250
#
# Do you want to add more to your meal? (Y/N) y
#
# Enter the name of the food/drink: salad
# Enter the corresponding calorie count: 250
#
# Do you want to add more to your meal? (Y/N) n
#
# Let's log what you had for dinner.
#
#
# Enter the name of the food/drink: mushrooms
# Enter the corresponding calorie count: 100
#
# Do you want to add more to your meal? (Y/N) y
#
# Enter the name of the food/drink: broccoli
# Enter the corresponding calorie count: 100
#
# Do you want to add more to your meal? (Y/N) y
#
# Enter the name of the food/drink: steak
# Enter the corresponding calorie count: 300
#
# Do you want to add more to your meal? (Y/N) n
#
# Today's Caloric Metrics:
#
# Breakfast: 320.0 calories
# Lunch: 500.0 calories
# Dinner: 500.0 calories
#
# In total, you consumed 1320.0 calories today.
# Thanks for taking care of your health, Alice!
#
# ******************************************************************************

# Global Constants
BREAKFAST = 'breakfast'
LUNCH = 'lunch'
DINNER = 'dinner'


# Defines the main function sequentially
def main():
    name = ''
    current_weight = 0.0
    goal_weight = 0.0
    pounds_to_lose = 0.0
    height = 0
    goal_bmi = 0.0
    breakfast = []
    lunch = []
    dinner = []
    breakfast_calories = 0.0
    lunch_calories = 0.0
    dinner_calories = 0.0
    total_calories = 0.0
    go = ''

    name = get_name()

    print_welcome(name)

    print_purpose()

    # This section sets weight-loss goals
    current_weight = get_current_weight()

    go = 'Y'
    while go == 'Y':
        goal_weight = get_goal_weight()
        # validates goal weight
        go = check_gw(current_weight, goal_weight)

    height = get_height()

    go = 'Y'
    while go == 'Y':
        goal_bmi = calculate_goal_bmi(goal_weight, height)
        # validates goal bmi
        go = check_goal_bmi(goal_bmi, name)
        if go == 'Y':
            goal_weight = get_goal_weight()

    pounds_to_lose = calculate_lbs_to_lose(current_weight, goal_weight)

    print_lbs_to_lose(name, pounds_to_lose, goal_weight)

    # This section logs caloric intake for the day
    choose_to_log()

    # log breakfast
    print_meal_intro(BREAKFAST)
    breakfast = add_food_and_cal()

    # log lunch
    print_meal_intro(LUNCH)
    lunch = add_food_and_cal()

    # log dinner
    print_meal_intro(DINNER)
    dinner = add_food_and_cal()

    # calculate the sum of each meal
    breakfast_calories = calculate_sum_cals(breakfast)
    lunch_calories = calculate_sum_cals(lunch)
    dinner_calories = calculate_sum_cals(dinner)

    # calculate the day's caloric total
    total_calories = calculate_total_cals(breakfast_calories,
                                          lunch_calories,
                                          dinner_calories)

    # print out results for user
    print_caloric_metrics(breakfast_calories,
                          lunch_calories,
                          dinner_calories,
                          total_calories)

    print_goodbye(name)


# Defines the input functions

def get_name():
    """
    Prompts the user to enter their name
    :param: none
    :return: string, user's name
    """
    name = ""
    name = input("Hi! Please enter your name: ")
    return name


def get_current_weight():
    """
    Prompts the user to enter their current weight in lbs
    :param: none
    :return: float, user's current weight
    """
    current_weight = 0.0
    current_weight = float(input("\nEnter your current weight "
                                 "in pounds: "))
    return current_weight


def get_goal_weight():
    """
    Prompts the user to enter their goal weight in lbs
    :param: none
    :return: float, user's goal weight
    """
    goal_weight = 0.0
    goal_weight = float(input("Enter your goal weight in pounds: "))
    return goal_weight


def get_height():
    """
    Prompts the user to enter their height in inches
    :param: none
    :return:
    """
    height = 0
    height = int(input("Enter your height in inches: "))
    return height


def add_food_and_cal():
    """
    Prompts the user to enter the name of food/drink
    consumed and the corresponding caloric content
    and returns the information
    :param: none
    :return: list, list of foods and calories
    """
    meal = []
    add_more = 'Y'
    if add_more != 'Y':
        print('No problem! Maybe next time.\nGoodbye!')
        exit()
    while add_more == 'Y':
        food_n_cal = []
        food = ''
        cal = 0.0
        food = input('\nEnter the name of the food/drink: ')
        cal = float(input('Enter the corresponding calorie count: '))
        food_n_cal.append(food)
        food_n_cal.append(cal)
        meal.append(food_n_cal)
        answer = input('\nDo you want to add more to your meal? (Y/N) ')
        add_more = answer.upper()
    return meal


# Defines the process functions

def calculate_lbs_to_lose(current_weight, goal_weight):
    """
    Calculates how much weight in pounds the user
    must lose to reach their goal weight
    :param current_weight: float, user's current weight
    :param goal_weight: float, user's goal weight
    :return: float, how many pounds the user must lose
    to reach their goal weight
    """
    pounds_to_lose = 0.0
    pounds_to_lose = current_weight - goal_weight
    return pounds_to_lose


def calculate_goal_bmi(goal_weight, height):
    """
    Calculate's the BMI for the user's goal weight
    :param goal_weight: int, user's goal weight
    :param height: int, user's height
    :return: float, user's body mass index
    """
    bmi = 0.0
    bmi = goal_weight / height ** 2 * 703
    return bmi


def calculate_sum_cals(meal):
    """
    Calculates the total calories of a meal
    :param meal:
    :return: float, sum of calories
    """
    sum_cal = 0.0
    for dish in meal:
        sum_cal += dish[1]
    return sum_cal


def calculate_total_cals(b_cal, l_cal, d_cal):
    """
    Sums the total caloric intake of the day
    :param b_cal: float, breakfast calories
    :param l_cal: float, lunch calories
    :param d_cal: float, dinner calories
    :return:
    """
    total_cal = 0.0
    total_cal = b_cal + l_cal + d_cal
    return total_cal


# Defines the output functions

def print_welcome(name="Inigo Montoya"):
    """
    Prints a welcome message with user's name
    :param name: string, user's name
    :return: none
    """
    print(f"\nWelcome, {name}, to the first step of your weight-loss journey!")


def print_purpose():
    """
    Prints the purpose of the program
    :param: none
    :return: none
    """
    print("\nThis program will tell you how many pounds "
          "you need to lose to reach your goal weight.")


def print_lbs_to_lose(name, pounds_to_lose, goal_weight):
    """
    Prints a message with the user's name that
    details how much weight the user must lose
    in order to reach their goal weight
    :param name: string, user's name
    :param pounds_to_lose: float, pounds left to lose
    :param goal_weight: float, user's goal weight
    :return: none
    """
    print(f"\n{name}, you will need to lose {pounds_to_lose} lbs "
          f"to reach your goal weight of {goal_weight} lbs.")


def print_meal_intro(meal):
    """
    Prints out n introduction to meal inputs
    :param meal: str, name of meal
    :return: none
    """
    print(f'\nLet\'s log what you had for {meal}.\n')


def print_caloric_metrics(b_cal, l_cal, d_cal, t_cal):
    print(f'\nToday\'s Caloric Metrics:\n\n'
          f'{BREAKFAST.capitalize()}: {b_cal} calories\n'
          f'{LUNCH.capitalize()}: {l_cal} calories\n'
          f'{DINNER.capitalize()}: {d_cal} calories\n\n'
          f'In total, you consumed {t_cal} calories today.')


def print_goodbye(user_name):
    print(f'Thanks for taking care of your health, {user_name}!')


# Conditionals

def check_gw(current_weight, goal_weight):
    """
    Compares the user's current weight to their
    goal weight and exits the program
    if the goal weight is greater than or equal to
    the current weight.
    :param current_weight: int, user's current weight
    :param goal_weight: int, user's goal weight
    :return: none
    """
    user_answer = ''
    if current_weight == goal_weight:
        print("\nYou're currently at your goal weight. Congrats!\n")
    elif current_weight < goal_weight:
        print("\nThis is a weight-loss app, not a weight-gain app. "
              "Please bulk elsewhere, friend.\n")
    if current_weight <= goal_weight:
        user_answer = input('Would you like to enter a new goal weight? (Y/N) ').upper()
    else:
        user_answer = 'N'
    if user_answer == 'N' and current_weight <= goal_weight:
        print('No problem!\nGoodbye!')
        exit()
    return user_answer


def check_goal_bmi(goal_bmi, name):
    """
     Checks to see if the user's BMI at their goal weight
     is a healthy choice or not
     :param name: string, the user's name
     :param goal_bmi: float, the user's BMI at goal weight
     :return: str, the user's answer regarding
     reentering goal weight
     """
    go = ''
    go = 'N'
    if goal_bmi < 18.5:
        print(f"I'm sorry, {name}. Your goal weight is too "
              f"low for your height.\n")
    elif goal_bmi > 24.9:
        print(f"I'm sorry, {name}. Your goal weight is too "
              f"high for your height.\n")
    else:
        print(f"\nFantastic, {name}! You've chosen "
              f"a healthy goal weight!")
    if goal_bmi < 18.5 or goal_bmi > 24.9:
        go = input("Would you like to enter a healthier goal weight? (Y/N) ").upper()
        if go == 'N':
            print(f"No problem, {name}!\nGoodbye!")
            exit()
    return go


def choose_to_log():
    """
    Asks the user if they would like to log
    their meals for the day. The user's answer then
    determines the control flow
    :param: none
    :return: none
    """
    answer = ''
    answer = input('Would you like '
                   'to log your meals for the day? (Y/N) ')
    answer = answer.upper()
    if answer == 'N':
        print("\nNo problem! Maybe next time.\nGoodbye!")
        exit()
    else:
        print(f"\nGreat! Let\'s get started!\n")


# Executes the program
main()
